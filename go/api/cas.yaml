openapi: 3.0.0
info:
  contact:
    email: chennqqi@qq.com
    name: chennqqi
    url: http://github.com/chennqqi
  description: Tecent Cloud Archive Storage Golang SDK.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Tecent Cloud Archive Storage Golang SDK.
  version: 1.4.3-3.0
externalDocs:
  description: Find out more
  url: https://cloud.tencent.com/document/product/572/8742
servers:
- url: /
security:
- ApiKeyAuth: []
tags:
- description: 文件库操作
  name: vault
- description: 档案操作
  name: archive
- description: 任务操作
  name: job
paths:
  /{UID}/vaults/{VaultName}:
    delete:
      description: Delete Vault 请求实现删除一个 Vault，删除前要求 Vault 下无 Archive 同时无 Archive 写入。删除 Vault 时同时删除其权限信息。请求成功后返回 204 NoContent。支持跨账户删除。当删除本账户下 Valut 时，UID值为"-"
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      responses:
        204:
          description: 请求成功，返回 204 No Content
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: 删除vault
      tags:
      - vault
    get:
      description: Describe Vault 请求实现读取一个 Vault 的属性。档案数与档案总大小，每日盘点更新，非实时数据。请求成功后返回 200 OK。支持跨账户操作。当操作本账户下 valut 时，UID值为"-"。
      operationId: GetVault
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultInfo'
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Describe Vault
      tags:
      - vault
    put:
      description: Create Vault 请求实现创建一个 Vault，每个用户支持创建 1000 个 Vault。成功后返回 201 Created。支持跨账户创建。当创建本账户下 valut 时，UID值为"-"。
      operationId: CreateVault
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      responses:
        204:
          description: 请求成功后返回 204 NoContent。
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: 创建vault
      tags:
      - vault
  /{UID}/vaults/{VaultName}/access-policy:
    delete:
      description: Delete Vault Access Policy 请求删除 Vault 的权限。只支持所有者操作，对应 UID 值为"-"。成功后返回 204 No Content。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      responses:
        204:
          description: 成功后返回 204 No Content。
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Delete Vault Access Policy
      tags:
      - vault
    get:
      description: Get Vault Access Policy 请求读取一个 Vault 的权限。只支持所有者操作，对应 UID 值为"-"。成功后返回 200 OK。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Get Vault Access Policy 请求读取一个 Vault 的权限
      tags:
      - vault
    put:
      description: Set Vault Access Policy 请求实现为一个 Vault 设置权限。具体策略语法参考『认证与鉴权』-『权限管理』只支持所有者设置权限，对应 UID 值为 "-"。成功后返回 204 No Content。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
      responses:
        200:
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Set Vault Access Policy
      tags:
      - vault
  /{UID}/vaults/{VaultName}/notification-configuration:
    delete:
      description: Delete Vault Notifications请求实现删除指定文件库通知回调策略 请求成功，返回 204 No Content
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      responses:
        204:
          description: 204 No Content
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Delete Vault Notifications
      tags:
      - vault
    get:
      description: Get Vault Notifications请求实现读取指定文件库通知回调策略
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfiguration'
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Get Vault Notifications
      tags:
      - vault
    put:
      description: Set Vault Access Policy 请求实现为一个 Vault 设置权限。具体策略语法参考『认证与鉴权』-『权限管理』 只支持所有者设置权限，对应 UID 值为 "-"。成功后返回 204 No Content。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationConfiguration'
      responses:
        200:
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Set Vault Access Policy
      tags:
      - vault
  /{UID}/vaults:
    get:
      description: List Vaults 接口实现列出该账户下所有的文件库。档案数与档案总大小，每日盘点更新，非实时数据。支持跨账户操作。当操作本账户时，UID为"-"。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - description: 指定要返回的文件库最大数目。该值为正整数，取值1-1000，默认为 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 按字典序，从该 Marker 开始列出 Vault 的 QCS，如果为空则从头列出 。
        explode: true
        in: query
        name: marker
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsSummary'
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: List Vaults
      tags:
      - vault
  /{UID}/vaults/{VaultName}/multipart-uploads/{uploadID}:
    delete:
      description: Abort Multipart Upload请求实现终止分段上传。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: uploadID
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Abort Multipart Upload
      tags:
      - archive
    get:
      description: List Parts请求实现列出已上传的数据段。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: uploadID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: limit
        required: false
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: header
        name: marker
        required: false
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListParts'
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: List Parts
      tags:
      - archive
    post:
      description: Complete Multipart Upload请求实现结束分段上传，形成文件。发起该请求时必须携带全文件的树形哈希值，服务端将比较用户上传的全文树形哈希和利用已上传分块得到的树形哈希，一致则请求成功，不一致则返回失败
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: uploadID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: x-cas-sha256-tree-hash
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: x-cas-archive-size
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          description: OK
          headers:
            Location:
              explode: false
              schema:
                type: string
              style: simple
            x-cas-archive-id:
              explode: false
              schema:
                type: string
              style: simple
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Complete Multipart Upload
      tags:
      - archive
    put:
      description: Upload Part请求实现上传档案的一段数据。支持乱序上传档案段，支持覆盖已上传的数据段。需在请求中标示该数据段在档案的字节范围。此外，支持并行上传数据段，最多可以上传 10000 段。当x-cas-sha256-tree-hash或x-cas-content-sha256与请求体中的真实文件校验和不一致时，请求返回错误。当Content-Length与请求体中的真实文件大小不一致时，请求返回错误。当Content-Range为必须以初始化分块时对应的块大小严格一致。例如，指定 4 194 304 字节 (4MB) 的段大小，则 0 到 4 194 303 字节 (4MB-1) 以及 4 194 304 (4MB) 到 8 388 607 (8MB-1) 为有效的段范围。2097152（ 2MB） 到6291456（ 6MB-1）为非法段范围。成功上传段后，将返回 204 No Content
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: uploadID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Range
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: x-cas-content-sha256
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: x-cas-sha256-tree-hash
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Length
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        200:
          description: OK
          headers:
            x-cas-sha256-tree-hash:
              explode: false
              schema:
                type: string
              style: simple
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Upload Part
      tags:
      - archive
  /{UID}/vaults/{VaultName}/archives/{ArchiveID}:
    delete:
      description: Delete Archive 请求实现删除一个 Archive。请求成功以后会返回 x-cas-archive-id 用来表示唯一的 Archive 文件。请求成功返回 204 No Content。在删除 Archive 后，您仍可能成功请求启动对已删除 Archive 的检索任务，但 Archive 检索任务会失败。 在您删除 Archive 时，对相应 Archive ID 正在进行的 Archive 检索可能成功，也可能不成功，具体取决于下面的场景：收到删除 Archive 请求时，Archive 检索任务正在下载 Archive 到缓存池，则 Archive 检索操作可能会失败。 收到删除 Archive 请求时，Archive 检索任务已经下载 Archive 到缓存池，则您将能够下载输出。支持跨账户操作。当操作本账户时，UID 为"-"。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ArchiveID
        required: true
        schema:
          type: string
        style: simple
      responses:
        204:
          description: OK no content
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Delete Archive
      tags:
      - archive
  /{UID}/vaults/{VaultName}/multipart-uploads:
    get:
      description: List Multipart Uploads请求实现列出正在进行中的分段上传
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: limit
        required: false
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: header
        name: marker
        required: false
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsSummary'
          description: OK
        400:
          description: OK
      summary: List Multipart Uploads
      tags:
      - archive
    post:
      description: Initiate Multipart Upload请求实现初始化分段上传，此请求将返回一个Upload Id用以后续分段上传，此Upload Id有效期24小时。每次分段上传的段大小要求一致（除了最后一个段），且必须为1 MB乘以2的幂次
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: x-cas-part-size
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: x-cas-archive-description
        required: false
        schema:
          type: string
        style: simple
      responses:
        200:
          description: OK
          headers:
            Location:
              explode: false
              schema:
                type: string
              style: simple
            x-cas-multipart-upload-id:
              explode: false
              schema:
                type: string
              style: simple
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Initiate Multipart Upload
      tags:
      - archive
  /{UID}/vaults/{VaultName}/archives:
    post:
      description: Upload Archive 请求实现上传一个 Archive 到指定 Vault。请求成功以后会返回 x-cas-archive-id 用来表示唯一的Archive 文件。请求成功返回 201 Created。上传文件时，可以指定 x-cas-archive-description 用来做文件内容备注。支持跨账户操作。当操作本账户时，UID为"-"。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: x-cas-content-sha256
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Length
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: x-cas-sha256-tree-hash
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: x-cas-archive-description
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        200:
          description: OK
          headers:
            Location:
              explode: false
              schema:
                type: string
              style: simple
            x-cas-archive-id:
              explode: false
              schema:
                type: string
              style: simple
            x-cas-content-sha256:
              explode: false
              schema:
                type: string
              style: simple
            x-cas-sha256-tree-hash:
              explode: false
              schema:
                type: string
              style: simple
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Upload Archive
      tags:
      - archive
  /{UID}/vaults/{VaultName}/jobs/<JobID>:
    get:
      description: Describe Job 请求实现获取Vault的具体任务信息。支持跨账户操作。当操作本账户时，UID为"-"
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: JobID
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/JobArchiveSearchInfo'
                - $ref: '#/components/schemas/JobArchiveListSearchInfo'
                - $ref: '#/components/schemas/JobArchiveImportInfo'
                - $ref: '#/components/schemas/JobArchiveExportInfo'
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Describe Job
      tags:
      - job
  /{UID}/vaults/{VaultName}/jobs/<JobID>/output:
    get:
      description: 请求用来输出缓存池中检索出来的 Archive 或Archive列表，缓存池中的内容24小时有效。请求所有数据成功后，返回 200 OK。请求部分数据成功时，返回 206 Partial Content。支持跨账户操作。当操作本账户时，UID 为"-"。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: JobID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Range
        required: false
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOutput'
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: OK
          headers:
            Content-Range:
              explode: false
              schema:
                type: string
              style: simple
            Content-Type:
              description: 根据内容类型判断输出是Archive还是Archive列表，若为Archive，该值为application/octet-stream；若为JSON格式Archive列表，该值为 application/json；若为CSV格式Archive列表，该值为 text/csv
              explode: false
              schema:
                enum:
                - application/octet-stream
                - application/json
                - text/csv
                type: string
              style: simple
            x-cas-sha256-tree-hash:
              description: Output中的数据树形哈希，当Job为Archive的一棵子树，且获取Job的Range范围也是一棵子树才返回该头部
              explode: false
              schema:
                type: string
              style: simple
        206:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOutput'
          description: 部分成功
          headers:
            Content-Range:
              explode: false
              schema:
                type: string
              style: simple
            Content-Type:
              description: 根据内容类型判断输出是Archive还是Archive列表，若为Archive，该值为application/octet-stream；若为JSON格式Archive列表，该值为 application/json；若为CSV格式Archive列表，该值为 text/csv
              explode: false
              schema:
                enum:
                - application/octet-stream
                - application/json
                - text/csv
                type: string
              style: simple
            x-cas-sha256-tree-hash:
              description: Output中的数据树形哈希，当Job为Archive的一棵子树，且获取Job的Range范围也是一棵子树才返回该头部
              explode: false
              schema:
                type: string
              style: simple
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Get Job Output
      tags:
      - job
  /{UID}/vaults/{VaultName}/jobs:
    get:
      description: List Jobs 请求实现列出 Vault 的任务，包括正在进行的任务以及最近完成的任务。支持跨账户操作。当操作本账户时，UID为"-"。。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: completed
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: statuscode
        required: false
        schema:
          enum:
          - InProgress
          - Succeeded
          - Failed
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsList'
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: List Job
      tags:
      - job
    post:
      description: Describe Job Initiate Job 请求实现将档案或者档案列表取出到缓存池。操作完成后，用户可以通过 Get Job Output 请求读取对应档案或者档案列表。
      parameters:
      - explode: false
        in: path
        name: UID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: VaultName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/JobArchiveSearchReq'
              - $ref: '#/components/schemas/JobArchiveListSearchReq'
              - $ref: '#/components/schemas/JobArchiveImportReq'
              - $ref: '#/components/schemas/JobArchiveExportReq'
      responses:
        200:
          description: OK
          headers:
            Location:
              description: 任务的相对 URI 路径，格式 /< UID >/vaults/< VaultName >/jobs/< JobID >
              explode: false
              schema:
                type: string
              style: simple
            x-cas-job-id:
              description: 任务ID
              explode: false
              schema:
                type: string
              style: simple
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ERROR
        500:
          description: server internal error
      summary: Initiate Job
      tags:
      - job
components:
  schemas:
    ErrorMessage:
      properties:
        code:
          description: 错误码
          type: string
        message:
          description: 错误信息
          type: string
        type:
          description: 类型
          type: string
      type: object
    Signature:
      properties:
        q-sign-algorithm:
          description: 签名算法默认sha1
          type: string
        q-ak:
          description: 用于标识用户身份， SecretID 的字段，在腾讯云的 API 密钥页面中可以查看。
          type: string
        q-sign-time:
          description: 签名的有效起止时间，其使用10位Unix时间戳来表示，有效效力精确到秒。该字段通过分号区分起止，起时在前、止时在后。
          format: int64
          type: integer
        q-key-time:
          description: 用户可以自定义 SignKey 有效时间，使用 10 位 Unix 时间戳来表示，有效效力精确到秒。该字段通过分号区分起止，起始时间在前、终止时间在后。一般 q-key-time 的时间范围大于等于 q-sign-time。
          format: int64
          type: integer
        q-header-list:
          description: 提供密文中包含需要校验的 Headers 列表，必须是小写字符，且需要按字典序排序，以";"分隔
          type: string
        q-url-param-list:
          description: 提供密文中包含需要校验的 Parameters 列表，必须是小写字符，以";"分隔
          type: string
        q-signature:
          description: 经过 HMAC-SHA1 算法加密的请求校验信息。
          type: string
      type: object
    VaultInfo:
      example:
        CreationDate: 2000-01-23
        VaultName: VaultName
        LastInventoryDate: LastInventoryDate
        SizeInBytes: 6
        NumberOfArchives: 0
        VaultQCS: VaultQCS
      properties:
        CreationDate:
          format: date
          type: string
        LastInventoryDate:
          type: string
        NumberOfArchives:
          format: int64
          type: integer
        SizeInBytes:
          format: int64
          type: integer
        VaultQCS:
          type: string
        VaultName:
          type: string
      type: object
    PolicyState:
      properties:
        effect:
          type: string
        principal:
          $ref: '#/components/schemas/PolicyState_principal'
      type: object
    Policy:
      example:
        Policy: Policy
      properties:
        Policy:
          type: string
      type: object
    PolicyObject:
      properties:
        version:
          type: string
        statement:
          items:
            $ref: '#/components/schemas/PolicyState'
          type: array
        action:
          items:
            type: string
          type: array
        resource:
          items:
            type: string
          type: array
      type: object
    PolicyCondition:
      properties:
        ConditionOperators:
          type: object
      type: object
    NotificationConfiguration:
      example:
        Events:
        - ArchiveRetrievalCompleted
        - ArchiveRetrievalCompleted
        CallBackUrl: CallBackUrl
      properties:
        CallBackUrl:
          type: string
        Events:
          items:
            enum:
            - ArchiveRetrievalCompleted
            - InventoryRetrievalCompleted
            - PushToCOSCompleted
            - PullFromCOSCompleted
            type: string
          type: array
      type: object
    VaultsSummary:
      example:
        VaultList:
        - CreationDate: 2000-01-23
          VaultName: VaultName
          LastInventoryDate: LastInventoryDate
          SizeInBytes: 6
          NumberOfArchives: 0
          VaultQCS: VaultQCS
        - CreationDate: 2000-01-23
          VaultName: VaultName
          LastInventoryDate: LastInventoryDate
          SizeInBytes: 6
          NumberOfArchives: 0
          VaultQCS: VaultQCS
        Marker: Marker
      properties:
        Marker:
          type: string
        VaultList:
          items:
            $ref: '#/components/schemas/VaultInfo'
          type: array
      type: object
    ListParts:
      example:
        PartSizeInBytes: 0
        CreationDate: 2000-01-23T04:56:07.000+00:00
        MultipartUploadId: MultipartUploadId
        Parts:
        - RangeInBytes: RangeInBytes
          SHA256TreeHash: SHA256TreeHash
        - RangeInBytes: RangeInBytes
          SHA256TreeHash: SHA256TreeHash
        ArchiveDescription: ArchiveDescription
        Marker: Marker
        VaultQCS: VaultQCS
      properties:
        ArchiveDescription:
          type: string
        CreationDate:
          format: date-time
          type: string
        Marker:
          type: string
        MultipartUploadId:
          type: string
        PartSizeInBytes:
          format: int64
          type: integer
        VaultQCS:
          type: string
        Parts:
          items:
            $ref: '#/components/schemas/ListParts_Parts'
          type: array
      type: object
    JobArchiveSearchInfo:
      properties:
        Action:
          type: string
        JobId:
          type: string
        JobDescription:
          type: string
        CallBackUrl:
          type: string
        CreationDate:
          format: date-time
          type: string
        CompletionDate:
          format: date-time
          type: string
        Completed:
          type: boolean
        StatusCode:
          type: string
        StatusMessage:
          type: string
        VaultQCS:
          type: string
        ArchiveId:
          type: string
        ArchiveSizeInBytes:
          format: int64
          type: integer
        ArchiveSHA256TreeHash:
          type: string
        RetrievalByteRange:
          type: string
        SHA256TreeHash:
          type: string
        Tier:
          enum:
          - standard
          - Expedited
          - Bulk
          type: string
      type: object
    JobInventoryRetrievalParameters:
      properties:
        Format:
          type: string
        StartDate:
          type: string
        EndDate:
          type: string
        Limit:
          type: string
        Marker:
          type: string
      type: object
    JobArchiveListSearchInfo:
      properties:
        Action:
          type: string
        JobId:
          type: string
        JobDescription:
          type: string
        CallBackUrl:
          type: string
        CreationDate:
          format: date-time
          type: string
        CompletionDate:
          format: date-time
          type: string
        Completed:
          type: boolean
        StatusCode:
          type: string
        StatusMessage:
          type: string
        VaultQCS:
          type: string
        InventorySizeInBytes:
          type: string
        InventoryRetrievalParameters:
          $ref: '#/components/schemas/JobInventoryRetrievalParameters'
      type: object
    JobArchiveImportInfo:
      properties:
        Action:
          type: string
        JobId:
          type: string
        JobDescription:
          type: string
        CallBackUrl:
          type: string
        CreationDate:
          format: date-time
          type: string
        CompletionDate:
          format: date-time
          type: string
        Completed:
          type: boolean
        StatusCode:
          type: string
        StatusMessage:
          type: string
        VaultQCS:
          type: string
        ArchiveId:
          type: string
        ArchiveSizeInBytes:
          format: int64
          type: integer
        ArchiveSHA256TreeHash:
          type: string
        RetrievalByteRange:
          type: string
        Bucket:
          type: string
        Object:
          type: string
        Tier:
          enum:
          - standard
          - Expedited
          - Bulk
          type: string
      type: object
    JobArchiveExportInfo:
      properties:
        Action:
          type: string
        JobId:
          type: string
        JobDescription:
          type: string
        CallBackUrl:
          type: string
        CreationDate:
          format: date-time
          type: string
        CompletionDate:
          format: date-time
          type: string
        Completed:
          type: boolean
        StatusCode:
          type: string
        StatusMessage:
          type: string
        VaultQCS:
          type: string
        ArchiveId:
          type: string
        ArchiveSizeInBytes:
          format: int64
          type: integer
        ArchiveSHA256TreeHash:
          type: string
        RetrievalByteRange:
          type: string
        Bucket:
          type: string
        Object:
          type: string
        Condition:
          $ref: '#/components/schemas/JobArchiveExportInfo_Condition'
        ArchiveDescription:
          type: string
      type: object
    JobOutputArchive:
      example:
        CreationDate: 2000-01-23T04:56:07.000+00:00
        Size: 0
        ArchiveDescription: ArchiveDescription
        ArchiveId: ArchiveId
        SHA256TreeHash: SHA256TreeHash
      properties:
        ArchiveId:
          type: string
        ArchiveDescription:
          type: string
        CreationDate:
          format: date-time
          type: string
        Size:
          format: int32
          minimum: 0
          type: integer
        SHA256TreeHash:
          type: string
      type: object
    JobOutput:
      example:
        InventoryDate: 2000-01-23T04:56:07.000+00:00
        ArchiveList:
        - CreationDate: 2000-01-23T04:56:07.000+00:00
          Size: 0
          ArchiveDescription: ArchiveDescription
          ArchiveId: ArchiveId
          SHA256TreeHash: SHA256TreeHash
        - CreationDate: 2000-01-23T04:56:07.000+00:00
          Size: 0
          ArchiveDescription: ArchiveDescription
          ArchiveId: ArchiveId
          SHA256TreeHash: SHA256TreeHash
        VaultQCS: VaultQCS
      properties:
        VaultQCS:
          type: string
        InventoryDate:
          format: date-time
          type: string
        ArchiveList:
          items:
            $ref: '#/components/schemas/JobOutputArchive'
          type: array
      type: object
    JobArchiveSearchReq:
      properties:
        Type:
          description: archive-retrieval
          type: string
        ArchiveId:
          type: string
        CallBackUrl:
          type: string
        Description:
          type: string
        RetrievalByteRange:
          type: string
        Tier:
          enum:
          - Expedited
          - Standard
          - Bulk
          type: string
      type: object
    JobArchiveListSearchReq:
      properties:
        Type:
          description: archive-retrieval
          type: string
        CallBackUrl:
          type: string
        Format:
          description: 默认JSON
          enum:
          - JSON
          - CSV
          type: string
        Description:
          type: string
        InventoryRetrievalParameters:
          $ref: '#/components/schemas/JobInventoryRetrievalParameters'
      type: object
    JobArchiveImportReq:
      properties:
        Type:
          description: push-to-cos
          type: string
        Description:
          type: string
        ArchiveId:
          type: string
        CallBackUrl:
          type: string
        RetrievalByteRange:
          type: string
        Bucket:
          type: string
        Object:
          type: string
        Tier:
          type: string
      type: object
    JobArchiveExportReq:
      properties:
        Type:
          description: pull-from-cos
          type: string
        Description:
          type: string
        CallBackUrl:
          type: string
        Bucket:
          type: string
        Object:
          type: string
        Tier:
          type: string
        Range:
          type: string
        Condition:
          $ref: '#/components/schemas/JobArchiveExportInfo_Condition'
      type: object
    JobsList:
      example:
        JobList:
        - ""
        - ""
        Marker: Marker
      properties:
        JobList:
          items:
            oneOf:
            - $ref: '#/components/schemas/JobArchiveSearchInfo'
            - $ref: '#/components/schemas/JobArchiveListSearchInfo'
            - $ref: '#/components/schemas/JobArchiveImportInfo'
            - $ref: '#/components/schemas/JobArchiveExportInfo'
          type: array
        Marker:
          type: string
      type: object
    PolicyState_principal:
      properties:
        qcs:
          items:
            type: string
          type: array
    ListParts_Parts:
      example:
        RangeInBytes: RangeInBytes
        SHA256TreeHash: SHA256TreeHash
      properties:
        RangeInBytes:
          type: string
        SHA256TreeHash:
          type: string
    JobArchiveExportInfo_Condition:
      properties:
        If-Modified-Since:
          type: string
        If-Umodified-Since:
          type: string
        If-Match:
          type: string
        If-None-Match:
          type: string
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
