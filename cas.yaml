openapi: 3.0.0
info:
  version: "1.1.0"
  title: Sample Access Code Flow OAuth2 Project
  description: >-
    This is an example of using OAuth2 Access Code Flow in a specification to
    describe security to your API.
tags:
  - name: vault
    description: vault
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: archive
    description: archive
  - name: job
    description: job
paths:
  '/{UID}/vaults/{VaultName}':
    get:
      summary: Describe Vault
      description: >-
        Describe Vault 请求实现读取一个 Vault 的属性。档案数与档案总大小，每日盘点更新，非实时数据。请求成功后返回 200
        OK。支持跨账户操作。当操作本账户下 valut 时，UID值为"-"。
      operationId: GetVault
      tags:
        - vault
      parameters:
      - in: path
        name: UID
        schema:
          type: string
        required: true
      - in: path
        name: VaultName
        schema:
          type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultInfo'
        '400':
          description: OK
    put:
      summary: 创建vault
      description: >-
        Create Vault 请求实现创建一个 Vault，每个用户支持创建 1000 个 Vault。成功后返回 201
        Created。支持跨账户创建。当创建本账户下 valut 时，UID值为"-"。
      operationId: CreateVault
      tags:
        - vault
      parameters:
        - in: path
          name: UID
          required: true
          schema:
            type: string
        - in: path
          name: VaultName
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 请求成功后返回 204 NoContent。
        '400':
          description: OK
    delete:
      summary: 删除vault
      tags:
        - vault
      description: >-
        Delete Vault 请求实现删除一个 Vault，删除前要求 Vault 下无 Archive 同时无 Archive 写入。删除
        Vault 时同时删除其权限信息。请求成功后返回 204 NoContent。支持跨账户删除。当删除本账户下 Valut 时，UID值为"-"
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
      responses:
        '204':
          description: 请求成功，返回 204 No Content
        '400':
          description: OK
  /<UID>/vaults/<VaultName>/access-policy:
    get:
      summary: Get Vault Access Policy 请求读取一个 Vault 的权限
      tags:
        - vault
      description: >-
        Get Vault Access Policy 请求读取一个 Vault 的权限。只支持所有者操作，对应 UID 值为"-"。成功后返回 200
        OK。
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          schema:
            type: string
          name: VaultName
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          description: OK
    delete:
      summary: Delete Vault Access Policy
      tags:
        - vault
      description: >-
        Delete Vault Access Policy 请求删除 Vault 的权限。只支持所有者操作，对应 UID 值为"-"。成功后返回
        204 No Content。
      parameters:
        - in: path
          name: UID
          required: true
          schema:
            type: string
        - in: path
          name: VaultName
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 成功后返回 204 No Content。
        '400':
          description: OK
    put:
      summary: Set Vault Access Policy
      tags:
        - vault
      description: >-
        Set Vault Access Policy 请求实现为一个 Vault
        设置权限。具体策略语法参考『认证与鉴权』-『权限管理』只支持所有者设置权限，对应 UID 值为 "-"。成功后返回 204 No
        Content。
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
      responses:
        '200':
          description: OK
        '400':
          description: OK
  /<UID>/vaults/<VaultName>/notification-configuration:
    get:
      summary: Get Vault Notifications
      tags:
        - vault
      description: Get Vault Notifications请求实现读取指定文件库通知回调策略
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfiguration'
        '400':
          description: OK
    delete:
      summary: Delete Vault Notifications
      tags:
        - vault
      description: Delete Vault Notifications请求实现删除指定文件库通知回调策略 请求成功，返回 204 No Content
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
      responses:
        '204':
          description: 204 No Content
        '400':
          description: OK
    put:
      summary: Set Vault Access Policy
      tags:
        - vault
      description: >-
        Set Vault Access Policy 请求实现为一个 Vault 设置权限。具体策略语法参考『认证与鉴权』-『权限管理』
        只支持所有者设置权限，对应 UID 值为 "-"。成功后返回 204 No Content。
      parameters:
        - in: path
          name: UID
          schema: 
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationConfiguration'
      responses:
        '200':
          description: OK
        '400':
          description: OK
  /<UID>/vaults:
    get:
      summary: List Vaults
      tags:
        - vault
      description: >-
        List Vaults
        接口实现列出该账户下所有的文件库。档案数与档案总大小，每日盘点更新，非实时数据。支持跨账户操作。当操作本账户时，UID为"-"。
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
          description: 指定要返回的文件库最大数目。该值为正整数，取值1-1000，默认为 1000
          required: false
        - in: query
          name: marker
          schema:
            type: string
          description: 按字典序，从该 Marker 开始列出 Vault 的 QCS，如果为空则从头列出 。
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsSummary'
        '400':
          description: OK
  /<UID>/vaults/<VaultName>/multipart-uploads/<uploadID>:
    get:
      summary: List Parts
      tags:
        - archive
      description: List Parts请求实现列出已上传的数据段。
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
        - in: path
          name: uploadID
          schema:
            type: string
          required: true
        - in: header
          name: limit
          schema:
            type: integer
            format: int64
          required: false
        - in: header
          name: marker
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListParts'
        '400':
          description: OK
    put:
      summary: Upload Part
      tags:
        - archive
      description: >-
        Upload
        Part请求实现上传档案的一段数据。支持乱序上传档案段，支持覆盖已上传的数据段。需在请求中标示该数据段在档案的字节范围。此外，支持并行上传数据段，最多可以上传
        10000
        段。当x-cas-sha256-tree-hash或x-cas-content-sha256与请求体中的真实文件校验和不一致时，请求返回错误。当Content-Length与请求体中的真实文件大小不一致时，请求返回错误。当Content-Range为必须以初始化分块时对应的块大小严格一致。例如，指定
        4 194 304 字节 (4MB) 的段大小，则 0 到 4 194 303 字节 (4MB-1) 以及 4 194 304 (4MB) 到
        8 388 607 (8MB-1) 为有效的段范围。2097152（ 2MB） 到6291456（
        6MB-1）为非法段范围。成功上传段后，将返回 204 No Content
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
        - in: path
          name: uploadID
          schema:
            type: string
          required: true
        - in: header
          name: Content-Range
          schema:
            type: string
          required: true
        - in: header
          name: x-cas-content-sha256
          schema:
            type: string
          required: true
        - in: header
          schema:
            type: string
          name: x-cas-sha256-tree-hash
          required: true
        - in: header
          name: Content-Length
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          headers:
            x-cas-sha256-tree-hash:
              schema:
                type: string
        '400':
          description: OK
    delete:
      summary: Abort Multipart Upload
      tags:
        - archive
      description: Abort Multipart Upload请求实现终止分段上传。
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
        - in: path
          name: uploadID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
        '400':
          description: OK
    post:
      summary: Complete Multipart Upload
      tags:
        - archive
      description: >-
        Complete Multipart
        Upload请求实现结束分段上传，形成文件。发起该请求时必须携带全文件的树形哈希值，服务端将比较用户上传的全文树形哈希和利用已上传分块得到的树形哈希，一致则请求成功，不一致则返回失败
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
        - in: path
          name: uploadID
          schema:
            type: string
          required: true
        - in: header
          name: x-cas-sha256-tree-hash
          schema:
            type: string
          required: true
        - in: header
          name: x-cas-archive-size
          schema:
            type: string
          required: true
      responses:
        '200':
          headers:
            Location:
              schema:
                type: string
            x-cas-archive-id:
              schema:
                type: string
          description: OK
        '400':
          description: OK
  /<UID>/vaults/<VaultName>/archives/<ArchiveID>:
    delete:
      summary: Delete Archive
      tags:
        - archive
      description: >-
        Delete Archive 请求实现删除一个 Archive。请求成功以后会返回 x-cas-archive-id 用来表示唯一的
        Archive 文件。请求成功返回 204 No Content。在删除 Archive 后，您仍可能成功请求启动对已删除 Archive
        的检索任务，但 Archive 检索任务会失败。 在您删除 Archive 时，对相应 Archive ID 正在进行的 Archive
        检索可能成功，也可能不成功，具体取决于下面的场景：收到删除 Archive 请求时，Archive 检索任务正在下载 Archive
        到缓存池，则 Archive 检索操作可能会失败。 收到删除 Archive 请求时，Archive 检索任务已经下载 Archive
        到缓存池，则您将能够下载输出。支持跨账户操作。当操作本账户时，UID 为"-"。
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
        - in: path
          schema:
            type: string
          name: ArchiveID
          required: true
      responses:
        '204':
          description: OK no content
        '400':
          description: OK
  /<UID>/vaults/<VaultName>/multipart-uploads:
    post:
      summary: Initiate Multipart Upload
      tags:
        - archive
      description: >-
        Initiate Multipart Upload请求实现初始化分段上传，此请求将返回一个Upload Id用以后续分段上传，此Upload
        Id有效期24小时。每次分段上传的段大小要求一致（除了最后一个段），且必须为1 MB乘以2的幂次
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
        - name: x-cas-part-size
          in: header
          schema:
            type: string
          required: true
        - name: x-cas-archive-description
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Location:
              schema:
                type: string
            x-cas-multipart-upload-id:
              schema:
                type: string
        '400':
          description: OK
    get:
      summary: List Multipart Uploads
      tags:
        - archive
      description: List Multipart Uploads请求实现列出正在进行中的分段上传
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
        - in: header
          name: limit
          schema:
            type: integer
            format: int64
            minimum: 1
          required: false
        - in: header
          name: marker
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsSummary'
        '400':
          description: OK
  /<UID>/vaults/<VaultName>/archives:
    post:
      summary: Upload Archive
      tags:
        - archive
      description: >-
        Upload Archive 请求实现上传一个 Archive 到指定 Vault。请求成功以后会返回 x-cas-archive-id
        用来表示唯一的Archive 文件。请求成功返回 201 Created。上传文件时，可以指定
        x-cas-archive-description 用来做文件内容备注。支持跨账户操作。当操作本账户时，UID为"-"。
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
        - in: header
          name: x-cas-content-sha256
          schema:
            type: string
          required: true
        - in: header
          name: Content-Length
          schema:
            type: string
          required: true
        - in: header
          name: x-cas-sha256-tree-hash
          schema:
            type: string
          required: true
        - in: header
          name: x-cas-archive-description
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          headers:
            Location:
              schema:
                type: string
            x-cas-archive-id:
              schema:
                type: string
            x-cas-content-sha256:
              schema:
                type: string
            x-cas-sha256-tree-hash:
              schema:
                type: string
        '400':
          description: OK
  /<UID>/vaults/<VaultName>/jobs/<JobID>:
    get:
      summary: Describe Job
      tags:
        - job
      description: Describe Job 请求实现获取Vault的具体任务信息。支持跨账户操作。当操作本账户时，UID为"-"
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
        - in: path
          name: JobID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/JobArchiveSearchInfo'
                  - $ref: '#/components/schemas/JobArchiveListSearchInfo'
                  - $ref: '#/components/schemas/JobArchiveImportInfo'
                  - $ref: '#/components/schemas/JobArchiveExportInfo'
        '400':
          description: OK
  /<UID>/vaults/<VaultName>/jobs/<JobID>/output:
    get:
      summary: Get Job Output
      tags:
        - job
      description: >-
        请求用来输出缓存池中检索出来的 Archive 或Archive列表，缓存池中的内容24小时有效。请求所有数据成功后，返回 200
        OK。请求部分数据成功时，返回 206 Partial Content。支持跨账户操作。当操作本账户时，UID 为"-"。
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
        - in: path
          name: JobID
          schema:
            type: string
          required: true
        - in: header
          name: Range
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
          headers:
            Content-Range:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
                enum:
                  - application/octet-stream
                  - application/json
                  - text/csv
              description: >-
                根据内容类型判断输出是Archive还是Archive列表，若为Archive，该值为application/octet-stream；若为JSON格式Archive列表，该值为
                application/json；若为CSV格式Archive列表，该值为 text/csv
            x-cas-sha256-tree-hash:
              schema:
                type: string
              description: Output中的数据树形哈希，当Job为Archive的一棵子树，且获取Job的Range范围也是一棵子树才返回该头部
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOutput'
        '206':
          description: 部分成功
          headers:
            Content-Range:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
                enum:
                  - application/octet-stream
                  - application/json
                  - text/csv
              description: >-
                根据内容类型判断输出是Archive还是Archive列表，若为Archive，该值为application/octet-stream；若为JSON格式Archive列表，该值为
                application/json；若为CSV格式Archive列表，该值为 text/csv
            x-cas-sha256-tree-hash:
              schema:
                type: string
              description: Output中的数据树形哈希，当Job为Archive的一棵子树，且获取Job的Range范围也是一棵子树才返回该头部
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOutput'
        '400':
          description: OK
  /<UID>/vaults/<VaultName>/jobs:
    get:
      summary: List Job
      tags:
        - job
      description: List Jobs 请求实现列出 Vault 的任务，包括正在进行的任务以及最近完成的任务。支持跨账户操作。当操作本账户时，UID为"-"。。
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
        - in: query
          name: completed
          schema:
            type: boolean
          required: false
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
          required: false
        - in: query
          name: marker
          schema:
            type: string
          required: false
        - in: query
          name: statuscode
          schema:
            type: string
            enum:
              - InProgress
              - Succeeded
              - Failed
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsList'
        '400':
          description: OK
    post:
      summary: Initiate Job
      tags:
        - job
      description: >-
        Describe Job Initiate Job 请求实现将档案或者档案列表取出到缓存池。操作完成后，用户可以通过 Get Job
        Output 请求读取对应档案或者档案列表。
      parameters:
        - in: path
          name: UID
          schema:
            type: string
          required: true
        - in: path
          name: VaultName
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/JobArchiveSearchReq'
                - $ref: '#/components/schemas/JobArchiveListSearchReq'
                - $ref: '#/components/schemas/JobArchiveImportReq'
                - $ref: '#/components/schemas/JobArchiveExportReq'
      responses:
        '200':
          description: OK
          headers:
            Location:
              schema:
                type: string
              description: 任务的相对 URI 路径，格式 /< UID >/vaults/< VaultName >/jobs/< JobID >
            x-cas-job-id:
              schema:
                type: string
              description: 任务ID
        '400':
          description: OK
  /example:
    get:
      summary: Server example operation
      description: >-
        This is an example opeartion to show how security is applied to the
        call.
      responses:
        '200':
          description: OK
  /ping:
    get:
      summary: Server heartbeat operation
      description: >-
        This operation shows how to override the global security defined above,
        as we want to open it up for all users.
      security: []
      responses:
        '200':
          description: OK
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Signature:
      type: object
      properties:
        q-sign-algorithm:
          type: string
          description: 签名算法默认sha1
        q-ak:
          type: string
          description: 用于标识用户身份， SecretID 的字段，在腾讯云的 API 密钥页面中可以查看。
        q-sign-time:
          type: integer
          format: int64
          description: 签名的有效起止时间，其使用10位Unix时间戳来表示，有效效力精确到秒。该字段通过分号区分起止，起时在前、止时在后。
        q-key-time:
          type: integer
          format: int64
          description: >-
            用户可以自定义 SignKey 有效时间，使用 10 位 Unix
            时间戳来表示，有效效力精确到秒。该字段通过分号区分起止，起始时间在前、终止时间在后。一般 q-key-time 的时间范围大于等于
            q-sign-time。
        q-header-list:
          type: string
          description: 提供密文中包含需要校验的 Headers 列表，必须是小写字符，且需要按字典序排序，以";"分隔
        q-url-param-list:
          type: string
          description: 提供密文中包含需要校验的 Parameters 列表，必须是小写字符，以";"分隔
        q-signature:
          type: string
          description: 经过 HMAC-SHA1 算法加密的请求校验信息。
    VaultInfo:
      type: object
      properties:
        CreationDate:
          type: string
          format: date
        LastInventoryDate:
          type: string
        NumberOfArchives:
          type: integer
          format: int64
        SizeInBytes:
          type: integer
          format: int64
        VaultQCS:
          type: string
        VaultName:
          type: string
    PolicyState:
      type: object
      properties:
        effect:
          type: string
        principal:
          type: object
          properties:
            qcs:
              type: array
              items:
                type: string
    Policy:
      type: object
      properties:
        Policy:
          type: string
    PolicyObject:
      type: object
      properties:
        version:
          type: string
        statement:
          type: array
          items:
            $ref: '#/components/schemas/PolicyState'
        action:
          type: array
          items:
            type: string
        resource:
          type: array
          items:
            type: string
    PolicyCondition:
      type: object
      properties:
        ConditionOperators:
          type: object
    NotificationConfiguration:
      type: object
      properties:
        CallBackUrl:
          type: string
        Events:
          type: array
          items:
            type: string
            enum:
              - ArchiveRetrievalCompleted
              - InventoryRetrievalCompleted
              - PushToCOSCompleted
              - PullFromCOSCompleted
    VaultsSummary:
      type: object
      properties:
        Marker:
          type: string
        VaultList:
          type: array
          items:
            $ref: '#/components/schemas/VaultInfo'
    ListParts:
      type: object
      properties:
        ArchiveDescription:
          type: string
        CreationDate:
          type: string
          format: date-time
        Marker:
          type: string
        MultipartUploadId:
          type: string
        PartSizeInBytes:
          type: integer
          format: int64
        VaultQCS:
          type: string
        Parts:
          type: array
          items:
            type: object
            properties:
              RangeInBytes:
                type: string
              SHA256TreeHash:
                type: string
    JobArchiveSearchInfo:
      type: object
      properties:
        Action:
          type: string
        JobId:
          type: string
        JobDescription:
          type: string
        CallBackUrl:
          type: string
        CreationDate:
          type: string
          format: date-time
        CompletionDate:
          type: string
          format: date-time
        Completed:
          type: boolean
        StatusCode:
          type: string
        StatusMessage:
          type: string
        VaultQCS:
          type: string
        ArchiveId:
          type: string
        ArchiveSizeInBytes:
          type: integer
          format: int64
        ArchiveSHA256TreeHash:
          type: string
        RetrievalByteRange:
          type: string
        SHA256TreeHash:
          type: string
        Tier:
          type: string
          enum:
            - standard
            - Expedited
            - Bulk
    JobInventoryRetrievalParameters:
      type: object
      properties:
        Format:
          type: string
        StartDate:
          type: string
        EndDate:
          type: string
        Limit:
          type: string
        Marker:
          type: string
    JobArchiveListSearchInfo:
      type: object
      properties:
        Action:
          type: string
        JobId:
          type: string
        JobDescription:
          type: string
        CallBackUrl:
          type: string
        CreationDate:
          type: string
          format: date-time
        CompletionDate:
          type: string
          format: date-time
        Completed:
          type: boolean
        StatusCode:
          type: string
        StatusMessage:
          type: string
        VaultQCS:
          type: string
        InventorySizeInBytes:
          type: string
        InventoryRetrievalParameters:
          $ref: '#/components/schemas/JobInventoryRetrievalParameters'
    JobArchiveImportInfo:
      type: object
      properties:
        Action:
          type: string
        JobId:
          type: string
        JobDescription:
          type: string
        CallBackUrl:
          type: string
        CreationDate:
          type: string
          format: date-time
        CompletionDate:
          type: string
          format: date-time
        Completed:
          type: boolean
        StatusCode:
          type: string
        StatusMessage:
          type: string
        VaultQCS:
          type: string
        ArchiveId:
          type: string
        ArchiveSizeInBytes:
          type: integer
          format: int64
        ArchiveSHA256TreeHash:
          type: string
        RetrievalByteRange:
          type: string
        Bucket:
          type: string
        Object:
          type: string
        Tier:
          type: string
          enum:
            - standard
            - Expedited
            - Bulk
    JobArchiveExportInfo:
      type: object
      properties:
        Action:
          type: string
        JobId:
          type: string
        JobDescription:
          type: string
        CallBackUrl:
          type: string
        CreationDate:
          type: string
          format: date-time
        CompletionDate:
          type: string
          format: date-time
        Completed:
          type: boolean
        StatusCode:
          type: string
        StatusMessage:
          type: string
        VaultQCS:
          type: string
        ArchiveId:
          type: string
        ArchiveSizeInBytes:
          type: integer
          format: int64
        ArchiveSHA256TreeHash:
          type: string
        RetrievalByteRange:
          type: string
        Bucket:
          type: string
        Object:
          type: string
        Condition:
          type: object
          properties:
            If-Modified-Since:
              type: string
            If-Umodified-Since:
              type: string
            If-Match:
              type: string
            If-None-Match:
              type: string
        ArchiveDescription:
          type: string
    JobOutputArchive:
      type: object
      properties:
        ArchiveId:
          type: string
        ArchiveDescription:
          type: string
        CreationDate:
          type: string
          format: date-time
        Size:
          type: integer
          minimum: 0
        SHA256TreeHash:
          type: string
    JobOutput:
      type: object
      properties:
        VaultQCS:
          type: string
        InventoryDate:
          type: string
          format: date-time
        ArchiveList:
          type: array
          items:
            $ref: '#/components/schemas/JobOutputArchive'
    JobArchiveSearchReq:
      type: object
      properties:
        Type:
          type: string
          description: archive-retrieval
        ArchiveId:
          type: string
        CallBackUrl:
          type: string
        Description:
          type: string
        RetrievalByteRange:
          type: string
        Tier:
          type: string
          enum:
            - Expedited
            - Standard
            - Bulk
    JobArchiveListSearchReq:
      type: object
      properties:
        Type:
          type: string
          description: archive-retrieval
        CallBackUrl:
          type: string
        Format:
          type: string
          enum:
            - JSON
            - CSV
          description: 默认JSON
        Description:
          type: string
        InventoryRetrievalParameters:
          $ref: '#/components/schemas/JobInventoryRetrievalParameters'
    JobArchiveImportReq:
      type: object
      properties:
        Type:
          type: string
          description: push-to-cos
        Description:
          type: string
        ArchiveId:
          type: string
        CallBackUrl:
          type: string
        RetrievalByteRange:
          type: string
        Bucket:
          type: string
        Object:
          type: string
        Tier:
          type: string
    JobArchiveExportReq:
      type: object
      properties:
        Type:
          type: string
          description: pull-from-cos
        Description:
          type: string
        CallBackUrl:
          type: string
        Bucket:
          type: string
        Object:
          type: string
        Tier:
          type: string
        Range:
          type: string
        Condition:
          type: object
          properties:
            If-Modified-Since:
              type: string
            If-Umodified-Since:
              type: string
            If-Match:
              type: string
            If-None-Match:
              type: string
    JobsList:
      type: object
      properties:
        JobList:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/JobArchiveSearchInfo'
              - $ref: '#/components/schemas/JobArchiveListSearchInfo'
              - $ref: '#/components/schemas/JobArchiveImportInfo'
              - $ref: '#/components/schemas/JobArchiveExportInfo'
        Marker:
          type: string      
security:
  - ApiKeyAuth: []